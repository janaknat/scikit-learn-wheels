env:
    global:
        - REPO_DIR=scikit-learn
        # Also see DAILY_COMMIT below
        - BUILD_COMMIT=master
        - PLAT=aarch64
        - NP_BUILD_DEP="numpy==1.19.2"
        - NP_TEST_DEP="numpy==1.19.2"
        - CYTHON_BUILD_DEP="Cython"
        - SCIPY_BUILD_DEP="scipy"
        - JOBLIB_BUILD_DEP="joblib"
        - UNICODE_WIDTH=32
        - DOCKER_IMAGE=quay.io/pypa/manylinux2014_aarch64
        - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
        # Commit when running from master branch
        - DAILY_COMMIT=master

language: python
services: docker
os: linux
arch: arm64-graviton2
dist: focal
virt: vm
group: edge

jobs:
  exclude:
      # Exclude the default Python 3.5 build
      - python: 3.5
  include:
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - NIGHTLY_BUILD="true"
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
        - NIGHTLY_BUILD="true"
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.8
        - NIGHTLY_BUILD="true"
before_install:
    - if [ "$TRAVIS_BRANCH" == "master" ]; then
          CONTAINER="pre-release";
          BUILD_COMMIT=${DAILY_COMMIT:-$BUILD_COMMIT};
      else
          CONTAINER=wheels;
          UPLOAD_ARGS="--no-update-index";
      fi
    - BUILD_DEPENDS="$NP_BUILD_DEP $CYTHON_BUILD_DEP $SCIPY_BUILD_DEP"
    - TEST_DEPENDS="$NP_TEST_DEP pytest pytest-xdist pytest-faulthandler pytest-env"
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    # Maybe get and clean and patch source
    - clean_code $REPO_DIR $BUILD_COMMIT
    - build_wheel $REPO_DIR $PLAT

script:
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - install_run $PLAT

after_success:
    # trigger an upload to the shared ecosystem
    # infrastructure at: https://anaconda.org/scipy-wheels-nightly
    # for cron jobs only (restricted to master branch once
    # per week)
    # SCIKIT_LEARN_WHEELS_NIGHTLY is a secret token
    # used in Travis CI config, originally
    # generated at anaconda.org for scipy-wheels-nightly
    - if [ "$TRAVIS_EVENT_TYPE" == "cron" ]; then
          source extra_functions.sh;
          for f in wheelhouse/*.whl; do rename_wheel $f; done;
          ANACONDA_ORG="scipy-wheels-nightly";
          pip install git+https://github.com/Anaconda-Server/anaconda-client;
          anaconda -t ${SCIKIT_LEARN_WHEELS_NIGHTLY} upload --force -u ${ANACONDA_ORG} ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl;
      fi
    # for merges (push events) we use the staging area instead;
    # SCIKIT_LEARN_STAGING_UPLOAD_TOKEN is a secret token used in Travis
    # CI config, originally generated at anaconda.org for
    # multibuild-wheels-staging
    - if [ "$TRAVIS_EVENT_TYPE" == "push" ]; then
          ANACONDA_ORG="multibuild-wheels-staging";
          pip install git+https://github.com/Anaconda-Server/anaconda-client;
          anaconda -t ${SCIKIT_LEARN_STAGING_UPLOAD_TOKEN} upload --force -u ${ANACONDA_ORG} ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl;
      fi
